"use strict";
/*
 * Copyright 2021 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChaincodeEventsRequestImpl = void 0;
const chaincodeevent_1 = require("./chaincodeevent");
class ChaincodeEventsRequestImpl {
    #client;
    #signingIdentity;
    #signedRequest;
    constructor(options) {
        this.#client = options.client;
        this.#signingIdentity = options.signingIdentity;
        this.#signedRequest = options.signedRequest;
    }
    async getEvents(options) {
        await this.#sign();
        const responses = this.#client.chaincodeEvents(this.#signedRequest, options);
        return (0, chaincodeevent_1.newChaincodeEvents)(responses);
    }
    getBytes() {
        return this.#signedRequest.serializeBinary();
    }
    getDigest() {
        return this.#signingIdentity.hash(this.#signedRequest.getRequest_asU8());
    }
    setSignature(signature) {
        this.#signedRequest.setSignature(signature);
    }
    async #sign() {
        if (this.#isSigned()) {
            return;
        }
        const signature = await this.#signingIdentity.sign(this.getDigest());
        this.setSignature(signature);
    }
    #isSigned() {
        const signatureLength = this.#signedRequest.getSignature()?.length || 0;
        return signatureLength > 0;
    }
}
exports.ChaincodeEventsRequestImpl = ChaincodeEventsRequestImpl;
//# sourceMappingURL=chaincodeeventsrequest.js.map