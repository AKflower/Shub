"use strict";
/*
 * Copyright 2020 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionContext = void 0;
const fabric_protos_1 = require("@hyperledger/fabric-protos");
const crypto_1 = require("crypto");
const hashes_1 = require("./hash/hashes");
class TransactionContext {
    #transactionId;
    #signatureHeader;
    constructor(signingIdentity) {
        const nonce = (0, crypto_1.randomBytes)(24);
        const creator = signingIdentity.getCreator();
        const saltedCreator = Buffer.concat([nonce, creator]);
        const rawTransactionId = (0, hashes_1.sha256)(saltedCreator);
        this.#transactionId = Buffer.from(rawTransactionId).toString('hex');
        this.#signatureHeader = new fabric_protos_1.common.SignatureHeader();
        this.#signatureHeader.setCreator(creator);
        this.#signatureHeader.setNonce(nonce);
    }
    getTransactionId() {
        return this.#transactionId;
    }
    getSignatureHeader() {
        return this.#signatureHeader;
    }
}
exports.TransactionContext = TransactionContext;
//# sourceMappingURL=transactioncontext.js.map